#!/sbin/runscript
# Copyright 2003 Martin Hierling <mad@cc.fh-lippe.de>
# Distributed under the terms of the GNU General Public License v2
# $Header: /home/xubuntu/berlios_backup/github/tmp-cvs/gentoo-deutsch/Repository/ebuilds/media-video/vdr/files/Attic/rc.vdr-1.1.26,v 1.3 2003/04/03 20:29:26 fow0ryl Exp $

opts="${opts} fullrestart"

depend() {
		need dvb
		use lircd
}

start() {
	ebegin "Starting $(vdr -V)"
	#
	# reading the default vdr options
	#
	[ -n "${AUDIO}" ] && vdropts="${vdropts} --audio=${AUDIO} "
	[ -n "${CONFIG}" ] && vdropts="${vdropts} --config=${CONFIG} "
	[ -n "${DEVICE}" ] && for i in ${DEVICE}; do vdropts="${vdropts} --device=${i} "; done
	[ -n "${SHUTDOWN}" ] && vdropts="${vdropts} --shutdown=${SHUTDOWN} "
	[ -n "${EPGFILE}" ] && vdropts="${vdropts} --epgfile=${EPGFILE} "
	[ -n "${LOG}" ] && vdropts="${vdropts} --log=${LOG} "
	[ -n "${VIDEO}" ] && vdropts="${vdropts} --video=${VIDEO} "
	[ -n "${RECORD}" ] && vdropts="${vdropts} --record=${RECORD} "
	[ -n "${PORT}" ] && vdropts="${vdropts} --port=${PORT} "
	[ -n "${TERMINAL}" ] && vdropts="${vdropts} --terminal=${TERMINAL} "
	[ -n "${LIB}" ] && vdropts="${vdropts} --lib=${LIB} "
	[ -n "${LIB}" -a -n "${PLUGINS}" ] && for i in ${PLUGINS}; do 
		#
		# reading associated plugin config files and render the command options
		#
		if  [ -f "/etc/conf.d/vdr.${i}" -a -n "$(grep "^[A-Z_]" /etc/conf.d/vdr.${i} 2>/dev/null )" ]; then
			unset pluginopts
			#
			# reading the values begining wiht [A-Z]
			# 
			for t in $(cat /etc/conf.d/vdr.${i} | grep "^[A-Z]"); do
				unset value option
				value=$(echo $t| cut -d "=" -f 2 | tr -d "\"")
				option=$(echo $t| cut -d "=" -f 1 | tr "[:upper:]" "[:lower:]")
				pluginopts="${pluginopts} --$option=$value"
			done
			#
			# An extra option field can be declared called _EXTRAOPTS containing
			# some free formed options for this plugin
			#
			if [ "$(grep _EXTRAOPTS /etc/conf.d/vdr.${i})" ]; then
				extraopts=$(grep _EXTRAOPTS /etc/conf.d/vdr.${i}|cut -d "\"" -f 2)
				pluginopts="${pluginopts} ${extraopts}"
			fi
			vdropts="${vdropts} --plugin='${i} ${pluginopts}'"
		else
		vdropts="${vdropts} --plugin=${i}"
		fi
	done

	#
	# this reads envs from pluginconfigs
	#
	for t in $PLUGINS; do
		if  [ -f "/etc/conf.d/vdr.$t" ]; then
			source /etc/conf.d/vdr.$t
		fi
	done

	#
	# finaly start vdr
	# 
	#echo "/usr/bin/vdr --daemon ${vdropts}"
	#old style su -c "/usr/bin/vdr --daemon ${vdropts} &"
	su -c "/usr/bin/vdr ${vdropts} &"
	eend $? "Failed to start vdr."
}

stop() {
	ebegin "Stopping $(vdr -V)"
	start-stop-daemon --stop --quiet --retry 15 --exec /usr/bin/vdr
	eend $? "Failed to stop vdr."
}

fullrestart() {
	ebegin "Fully restarting $(vdr -V) and DVB drivers"
	/etc/init.d/vdr stop	
	/etc/init.d/dvb stop
	/etc/init.d/vdr zap
	/etc/init.d/dvb zap
	sleep 5
	/etc/init.d/dvb start
	/etc/init.d/vdr start
}
