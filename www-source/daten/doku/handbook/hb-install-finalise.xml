<!-- The content of this document is licensed under the CC-BY-SA license -->
<!-- See http://creativecommons.org/licenses/by-sa/1.0 -->

<!-- $Header: /home/xubuntu/berlios_backup/github/tmp-cvs/gentoo-deutsch/Repository/www-source/daten/doku/handbook/hb-install-finalise.xml,v 1.1 2003/11/19 16:34:08 jay Exp $ -->

<!-- Original English Version 1.8 -->
<sections>
<section>
<title>Benutzerverwaltung</title>
<subsection>
<title>Setzen des Passwortes für root</title>
<body>

<p>
Bevor es noch vergessen wird, sollte das Passwort für root mit folgendem Befehl gesetzt werden:
</p>

<pre caption="Setzen des Passwortes für root">
# <i>passwd</i>
</pre>

</body>
</subsection>
<subsection>
<title>Hinzufügen eines Benutzers für den täglichen Gebrauch</title>
<body>

<p>
Arbeiten als root in einem Unix/Linux System ist <e>gefährlich</e> und sollte, wenn immer
möglich, vermieden werden. Wir empfehlen daher <e>nachdrücklich</e> das Einrichten
eines Benutzers für die täglichen Aufgaben.
</p>

<p>
For instance, to create a user called <c>john</c> who is member of the
<c>wheel</c> group (be able to change to root using <c>su</c>), <c>users</c>
group (default for all users) and <c>audio</c> group (be able to use audio
devices):
</p>

<pre caption="AHinzufügen eines Benutzers für den täglichen Gebrauch">
# <i>useradd john -m -G users,wheel,audio -s /bin/bash</i>
# <i>passwd john</i>
Password: <comment>(Hier das Passwort für john eintragen)</comment>
Re-enter password: <comment>(Das Passwort zur Kontrolle noch einmal eingeben)</comment>
</pre>

<p>
Sollte dieser Benutzer eine bestimmte Aufgabe als root durchführen, kann er den
Befehl <c>su -</c> verwenden, um temporär Rechte als root zu erhalten.
Alternativ kann das <c>sudo</c> Paket verwendet werden, welches mit richtiger
Konfiguration sehr sicher ist.
</p>

</body>
</subsection>
</section>
<section>
<title>Neustart und viel Spass</title>
<subsection>
<title>Neustarten</title>
<body>

<p>
Herzlichen Glückwunsch! Das Gentoo System ist nun komplett. Führen
Sie bei Bedarf <c>etc-update</c> aus, um die Konfigurationsdateien auf den
aktuellen Stand zu bringen. Dann beenden Sie die gechrootete Umgebung
und entladen Sie alle gemounteten Partitionen. Zum Schluss tippen Sie dann
den magischen Befehl auf den Sie bereits gewartet haben:<c>reboot</c>.
</p>

<pre caption="Neustarten des Systems">
# <i>etc-update</i>
# <i>exit</i>
# <i>cd /</i>
# <i>umount /mnt/gentoo/boot /mnt/gentoo/proc /mnt/gentoo</i>
# <i>reboot</i>
</pre>

<p>
Natürlich sollten Sie nicht vergessen, die bootfähige CD aus dem Laufwerk zu
entfernen, da ansonsten die CD erneut anstatt dem brandneuen
Gentoo System gebootet wird. 
</p>

<p>
OldWorld PPC Benutzer werden zunächst in MacOS booten, da ihr Bootloader noch 
nicht installiert ist. Diese Benutzer sollten den Punkt <uri
link="#doc_chap2_sect2">Optional: Konfiguration von BootX</uri> lesen. GRP Benutzer
können mit Punkt <uri link="#doc_chap2_sect3">Optional: Installation von weiteren
Paketen</uri> weiterfahren, alle anderen springen gleich zum nächsten Kapitel <uri
link="?part=1&amp;chap=12">Wie geht es weiter?</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Optional: Konfiguration von BootX</title>
<body>

<impo>
Dieser Unterabschnitt ist <e>nur</e> für PPC Benutzer interessant, die Bootx
als ihren Bootloader einsetzen wollen. Alle anderen Leser können diesen Abschnitt
getrost überspringen.
</impo>

<p>
Nach dem Booten Ihres Rechners in MacOS öffnen Sie das BootX panel.
Wählen Sie <c>Options</c> und entfernen Sie den Haken vor <c>Used specified RAM disk</c>.
Nach Rückkehr in den BootX Hauptbildschirm kann nun eine Root-Partition ausgewählt
werden. Diese sollte mit den entsprechenden Werten ausgefüllt werden.
Now your machine is booted in MacOS, open the BootX control panel.
</p>

<p>
BootX can be configured to start Linux upon boot. If you do this, you will
first see your machine boot into MacOS then, during startup, BootX will
load and start Linux. See the <uri
link="http://penguinppc.org/projects/bootx/">BootX home page</uri> for more 
information.
</p>

<p>
If you are a GRP users you can continue with <uri
link="#doc_chap2_sect3">Optional: Install Extra Packages</uri>, otherwise go to
<uri link="?part=1&amp;chap=12">Where to go from here?</uri>.
</p>

</body>
</subsection>
<subsection>
<title>Optional: Installation von weiteren Paketen</title>
<body>

<impo>
This part is for GRP users only. Other users should skip this part and continue
with <uri link="?part=1&amp;chap=12">Where to go from here?</uri>.
</impo>

<p>
Now that your system is booted, log on as the user you created (for instance,
<c>john</c>) and use <c>su -</c> to gain root privileges:
</p>

<pre caption="Gaining root privileges">
$ <i>su -</i>
Password: <comment>(Enter your root password)</comment>
</pre>

<p>
Now we need to copy over the prebuild binaries from the second CD (CD-2) if you
have it. First mount this CD:
</p>

<pre caption="Mount the CD-2">
<comment>(Put CD-2 in the CD tray)</comment>
# <i>mount /mnt/cdrom</i>
</pre>

<p>
Now copy over all prebuild binaries from the CD to
<path>/usr/portage/packages</path>. Make sure you use the same copy-command!
</p>

<pre caption="Copy over prebuild binaries">
# <i>cp -a /mnt/cdrom/packages/* /usr/portage/packages/</i>
</pre>

<p>
Now install the packages you want. CD-2 contains several prebuild binaries, for
instance KDE:
</p>

<pre caption="Installing KDE">
# <i>emerge -k kde</i>
</pre>

<p>
Be sure to install the binaries now. When you do an <c>emerge sync</c> to update
Portage (as you will learn later), the prebuilt binaries might not match against
the ebuilds in your updated Portage. You can try to circumvent this by using
<c>emerge -K</c> instead of <c>emerge -k</c>.
</p>

<p>
Congratulations, your system is now fully equiped! Continue with <uri
link="?part=1&amp;chap=12">Where to go from here?</uri> to learn more about
Gentoo.
</p>

</body>
</subsection>
</section>
</sections>
