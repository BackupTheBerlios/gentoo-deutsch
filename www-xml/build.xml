<?xml version='1.0'?>

<!DOCTYPE guide SYSTEM "../www-xsl/guide.dtd">


<guide link="/doc/build.html">
<title>Anleitung zur Gentoo Linux 1.2 Installation</title>
<author title="Chief Architect"><mail link="drobbins@gentoo.org">Daniel Robbins</mail></author>
<author title="Author">Chris Houser</author>
<author title="Author"><mail link="jerry@gentoo.org">Jerry Alexandratos</mail></author>
<author title="Ghost"><mail link="g2boojum@gentoo.org">Grant Goodyear</mail></author>
<author title="&#xDC;bersetzer"><mail link="mgreiner@berlios.de">Markus Greiner</mail></author>

<abstract>Diese Anleitung f&#xFC;hrt Sie schrittweise durch den Gentoo Linux 1.2 Installationsprozess 
f&#xFC;r die x86 Prozessorarchitektur (AMD, Intel). Die Gentoo Linux Installation unterst&#xFC;tzt 
verschiedene Installationsarten, abh&#xE4;ngig davon wieviel des Systems von Grund auf installiert werden soll.
</abstract>

<version>1.51</version>
<date>15 Juli 2002</date>

<chapter>
<title>&#xDC;ber die Installation</title>
<section>
<body>

<p>Die neue Boot CD startet von fast jedem modernen IDE CD-ROM Laufwerk, sowie von vielen 
SCSI CD-ROMs. Die CD-ROM unterst&#xFC;tzt IDE Controller (eingebaut im Kernel) sowie alle 
SCSI Ger&#xE4;te (vorhanden als Module). Zus&#xE4;tzlich stellt sie Module f&#xFC;r
buchst&#xE4;blich jede Netzwerkkarte zur Verf&#xFC;gung die Linux unterst&#xFC;tzt, 
sowie Tools die es erm&#xF6;glichen das Netzwerk zu konfigurieren und ausgehende 
<c>ssh</c> Verbindungen zum Dateidownload aufzubauen.</p>

<p> Um von der "Build" CD zu installieren, wird ein 486+ Prozessor ben&#xF6;tigt und 
idealerweise mindestens 64 Megabyte RAM. (Gentoo Linux konnte erfolgreich mit 
64 MB RAM +  64 MB Swap installiert werden, aber die Installation unter diesen Bedingungen 
war extrem langsam.) Um die Installation zu starten, laden Sie zuerst eines unserer 
CD ISO Images von <uri>http://www.ibiblio.org/gentoo/releases/build/</uri>. Im Augenblick 
haben wir zwei CDs verf&#xFC;gbar. Unsere erste CD ist 
<uri link="http://www.ibiblio.org/gentoo/releases/build/1.2/gentoo-ix86-1.2.iso">
gentoo-ix86-1.2.iso</uri>.Dieses Image ist recht klein (16Mb) und enth&#xE4;lt ein minimales 
"chrootf&#xE4;higes" <!-- Ich probier es mal damit (JS) -->
Image (<path>stage1-ix86-1.2.tbz2</path>) -- alles was Sie ben&#xF6;tigen um ein
Gentoo Linux System von Grund auf aufzubauen. (Die Quelldateien werden dabei 
automatisch aus dem Internet geladen.) Unsere zweite CD ist 
<uri link="http://www.ibiblio.org/gentoo/releases/build/1.2/gentoo-i686-1.2.iso">
gentoo-i686-1.2.iso</uri>. Dieses Image ist etwas gr&#xF6;&#xDF;er (100+Mb) -- Es
enth&#xE4;lt das gleiche Material wie auf unserem 16Mb Image, <e>plus</e> einem 
vorkompiliertem i686 Basissystem (<path>stage3-i686-1.2.tbz2</path>) 
sowie ein zum Teil kompiliertes <!-- nicht so gut. Alternativen?? damit ?? (JS) mit s ists ok :-) (MG)-->
i686 Basissystem (<path>stage2-i686-1.2.tbz2</path>) in TAR-Archiven.
Die beiden neuen TAR-Archive ben&#xF6;tigen einen Pentium Pro oder besser (K6 geht nicht). 
Wenn Sie ein i686+ System verwenden und nicht alles von Grund auf kompilieren wollen, 
k&#xF6;nnen diese die Installation deutlich beschleunigen.
</p>

<p>Jetzt lassen Sie uns kurz den den Installationsprozess skizzieren. Sie erstellen die Partitionen,
erzeugen die Dateisysteme und entpacken entweder das <e>stage1</e>, <e>stage2</e> oder <e>stage3</e> 
Archiv. Wenn Sie das <e>stage2</e> oder <e>stage3</e> Archiv verwenden m&#xFC;ssen Sie alle n&#xF6;tigen Schritte 
unternehmen um Ihr System auf den Stand des <e>stage3</e> Archivs zu bringen. Wenn Sie <e>stage3</e>
erreicht haben k&#xF6;nnen Sie das System konfigurieren (die Konfigurationsdateien anpassen, einen Bootloader 
installieren, usw.) und in ein voll funktionsf&#xE4;higes Gentoo Linux booten.
Abh&#xE4;ngig von der gew&#xE4;hlten  Installationsstufe von der Sie starten, 
hier die ben&#xF6;tigten Schritte:
</p>


<table>
<tr><th>stage Archiv</th><th>Installationsanforderungen</th></tr>
<tr><ti>1</ti><ti>Einrichten von Partition und Dateisystem, emerge rsync, bootstrap, emerge system, emerge linux sources, abschliessende Konfiguration</ti></tr>
<tr><ti>2</ti><ti>Einrichten von Partition und Dateisystem, emerge rsync, emerge system, emerge linux sources, abschliessende Konfiguration</ti></tr>
<tr><ti>3</ti><ti>Einrichten von Partition und Dateisystem, emerge rsync (optional), abschliessende Konfiguration</ti></tr>
</table>

</body>
</section>
</chapter>
<chapter>
<title>Booten</title>
<section>
<body>

<p>Wenn Sie sich f&#xFC;r eine CD entschieden haben, booten Sie damit. Sie werden von
einem Haufen Text und einem <c>boot:</c> Prompt am unteren Bildschirmrand 
begr&#xFC;&#xDF;t. Dr&#xFC;cken Sie an diesem Prompt <e>enter</e> und Linux wird von der CD
geladen.</p>


<p>Als n&#xE4;chstes werden Sie mit einer kleinen Liste von verf&#xFC;gbaren Befehlen auf der 
Boot-CD begr&#xFC;&#xDF;t. Dies beinhaltet <c>nano</c> (einen Klon des Editors <c>pico</c>) und
die Anleitung zur Netzwerkkonfiguration. Danach werden Sie nach Ihrem bevorzugtem
Keyboard Layout befragt, gefolgt von der automatischen Erkennung der PCI Ger&#xE4;te. W&#xE4;hrend
der Ger&#xE4;teerkennung werden alle passenden Kernelmodule f&#xFC;r PCI SCSI Controller und
Netzwerkkarten geladen. Wenn Sie danach <e>Enter</e> dr&#xFC;cken kommen Sie in eine
minimale Linux Umgebung. Sie sollten nun ein root Prompt ("<c>#</c>") auf der
aktuellen Konsole haben. Durch dr&#xFC;cken von Alt-F2, Alt-F3, usw. gefolgt von
einem <e>Enter</e>  k&#xF6;nnen Sie weitere Konsolen aktivieren.</p>


</body>
</section>
</chapter>

<chapter>
<title>Laden der Kernel Module</title>
<section>
<body>

<p>Sie sind jetzt fast soweit, dass Sie mit der Installation anfangen k&#xF6;nnen. 
Sie m&#xFC;ssen aber noch daf&#xFC;r sorgen, dass der Kernel auch die Netzwerkkarte 
erkennt. Eventuell m&#xFC;ssen auch noch SCSI Module geladen werden die nicht
automatisch erkannt wurden. Um eine Liste aller verf&#xFC;gbaren Netzwerkkartenmodule
anzuzeigen, geben Sie <c>ls /lib/modules/*/kernel/drivers/net/*</c> ein.
Um ein bestimmtes Modul zu laden, tippen Sie: </p>

<pre>
# <i>modprobe pcnet32</i>
	<comment>(Ersetzen Sie pcnet32 durch das Modul Ihrer NIC)</comment>
</pre>

<p>Wenn Sie nun auch noch auf SCSI Hardware zugreifen m&#xF6;chten die nicht automatisch
erkannt wurde, m&#xFC;ssen Sie das passende Modul aus /lib/modules laden. 
Verwenden Sie dazu <c>modprobe</c>:</p>


<pre>
# <i>modprobe aic7xxx</i>
# <i>modprobe sr_mod</i>
# <i>modprobe sd_mod</i>
</pre>

<p>Mit den oben stehenden Befehlen haben Sie den SCSI Treiber <c>aic7xxx</c> geladen und
sichergestellt das die Unterst&#xFC;tzung f&#xFC;r SCSI CD-ROMS (<c>sr_mod</c>) und Festplatten 
(<c>sd_mod</c>) aktiviert ist.</p>

<note>Version -r10 des ISO Images enth&#xE4;lt jetzt auch <c>hdparm</c>. Wenn eine Ihrer Festplatten
optimiert werden muss, ist nun der richtige Zeitpunkt daf&#xFC;r.</note>
</body>
</section>
</chapter>

<chapter>
<title>PCMCIA Kernel Module laden</title>
<section>
<body>
<p>Wenn Sie eine PCMCIA Netzwerkkarte verwenden, m&#xFC;ssen Sie noch einen
zus&#xE4;tzlichen Dreh anwenden.</p>
<pre>
# <i>insmod pcmcia_core</i>
# <i>insmod i82365</i>
# <i>insmod ds</i>
# <i>cardmgr -f</i>
</pre>

<p>W&#xE4;hrend cardmgr &#xFC;berpr&#xFC;ft welche Hardware vorhanden ist, sollten aus Ihrem
Lautsprecher einige Piepser ert&#xF6;nen und die PCMCIA Netzwerkkarte ihre Arbeit
aufnehmen. Sie k&#xF6;nnen nat&#xFC;rlich die PCMCIA Karte auch nach dem Laden des cardmgr
einstecken.(Technisch gesehen m&#xFC;ssen Sie <i>cardmgr</i> nicht starten wenn Sie
genau wissen welche Module Ihre PCMCIA Karte ben&#xF6;tigt. Aber wenn nicht, versuchen
Sie nicht alle Module zu laden um zu sehen welches passt. Das wird nicht
funktionieren, da sich alle Module laden lassen und darauf warten das eine
passende PCMCIA Karte eingesteckt wird. Au&#xDF;erdem entfernt <c>cardmgr</c> die
Module der Karte wieder wenn sie entnommen wird.)
</p>

</body>
</section>
</chapter>
<chapter>
<title>Konfiguration der Netzwerkanbindung</title>
<section>
<body>

<p>Die neue -r11+ Boot CD erlaubt es nun ein Netzwerk zu konfigurieren damit <c>ssh</c>, 
<c>scp</c> oder <c>wget</c> schon vor der eigentlichen Installation verwendet werden k&#xF6;nnen. Auch
wenn Sie diese Programme jetzt nicht brauchen, sollten Sie nun das Netzwerk konfigurieren. Einmal
konfiguriert kann Portage diese Netzwerkverbindung nutzen wenn Sie sich in der "chroot" Umgebung
befinden. (F&#xFC;r die Gentoo Linux Installation erforderlich.)</p>

</body>
</section>

<section>
<title>DHCP</title>
<body>
<p>Mit DHCP ist die Netzwerkkonfiguration sehr einfach. Wenn Ihr Provider kein DHCP anbietet,
geht es f&#xFC;r Sie bei der statischen Netzwerkkonfiguration weiter.</p>

<pre caption="Netzerk Konfiguration via DHCP">
# <i>dhcpcd eth0</i> 
</pre>
<note>
Einige Provider erwarten das Sie einen Hostnamen &#xFC;bergeben. Um dies zu tun h&#xE4;ngen Sie die 
Option <c>-h meinhostname</c> an das oben stehende Kommando.</note>

<p>Wenn Sie <i>dhcpConfig</i> Warnungen bekommen, keine Panik. Die meisten Meldungen sind 
harmlos. Weiter geht es unten mit dem Test der Netzwerkanbindung.</p>

</body>
</section>
<section>
<title>Statische Konfiguration</title>
<body>
<p>
Sie m&#xFC;ssen Ihre Netzwerkanbindung soweit konfigurieren, dass Sie die ben&#xF6;tigten Quellen 
herunterladen k&#xF6;nnen. Au&#xDF;erdem wird das lokale (localhost) Interface ben&#xF6;tigt. 
Bitte geben Sie dazu folgende Befehle ein und ersetzen $IFACE mit Ihrem Netzwerkinterface 
(typischerweise <c>eth0</c>), $IPNUM mit Ihrer IP Adresse, $BCAST mit Ihrer Broadcast Adresse und 
$NMASK mit Ihrer Netzwerkmaske. Bei dem <c>route</c> Befehl ersetzen Sie $GTWAY durch die IP Adresse 
Ihres "default Gateway".</p>

<pre>
# <i>/sbin/ifconfig $IFACE $IPNUM broadcast $BCAST netmask $NMASK</i>
# <i>/sbin/route add -net default gw $GTWAY netmask 0.0.0.0 metric 1</i>
</pre>
<p>Jetzt m&#xFC;ssen Sie die Datei <path>/etc/resolv.conf</path> erstellen damit die Namensaufl&#xF6;sung 
(Web/FTP Server durch Namen anstatt der IP Adresse finden) funktioniert.</p>

<note>Im Moment ist nur <c>nano</c>, ein kleiner, leicht zu bedienender Editor installiert.
Verwenden Sie <c>nano</c> mit dem Schalter <c>-w</c> um den automatischen Zeilenumbruch 
abzuschalten.</note>

<p>Hier ein Beispiel der Datei /etc/resolv.conf:</p>

<pre caption="/etc/resolv.conf Vorlage">
domain mydomain.com
nameserver 10.0.0.1
nameserver 10.0.0.2
</pre>
<p>Ersetzten Sie <c>10.0.0.1</c> und <c>10.0.0.2</c> mit den IP Adressen Ihres prim&#xE4;ren und
sekund&#xE4;ren DNS Servers.</p>
</body>
</section>
<section>
<title>Test der Netzwerkanbindung</title>
<body>
<p>Da Ihre Netzwerkanbindung jetzt konfiguriert ist sollte das <c>/sbin/ifconfig -a</c> Kommando ergeben,
 das Ihre Netzwerkkarte (hoffentlich) arbeitet (achten Sie auf <e>UP</e> und <e>RUNNING</e> in der Ausgabe).
</p>

<pre caption="/sbin/ifconfig bei einer arbeitenden Netzwerkkarte">
eth0      Link encap:Ethernet  HWaddr 00:50:BA:8F:61:7A
          inet addr:192.168.0.2  Bcast:192.168.0.255  Mask:255.255.255.0
          inet6 addr: fe80::50:ba8f:617a/10 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1498792 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1284980 errors:0 dropped:0 overruns:0 carrier:0
          collisions:1984 txqueuelen:100
          RX bytes:485691215 (463.1 Mb)  TX bytes:123951388 (118.2 Mb)
          Interrupt:11
</pre>
<!--
<note>
If you have a static ppp link, you can !!! do this...!!!
Sollen wir hier eigenmaechtig eine PPPoE Abschnitt einfuegen - In Deutschland ist das ja deutlich
verbereiteter als in den USA (JS) ?
Waere zu Ueberlegen, moechte aber erst den Rest uebersetzen. (MG).
</note>
-->
</body>
</section>
<section>
<title>Das Netzwerk ist jetzt online!</title>
<body>
<p>Der Netzwerkanschluss sollte nun konfiguriert und nutzbar sein. Sie sind nun in der Lage sich via 
<c>ssh</c>, <c>scp</c> und <c>wget</c> mit anderen Rechnern in Ihrem LAN oder im Internet zu
verbinden.</p>
</body>
</section>
</chapter>
<chapter>
<title>Einrichten der Partitionen</title>
<section>
<body>

<p>Nun da der Kernel Netzwerk und Festplatten Kontroller unterst&#xFC;zt, wird es Zeit
die Partitionen f&#xFC;r Gentoo Linux einzurichten.</p>

<p>
Hier nun ein kurzer &#xDC;berblick &#xFC;ber das Standard Layout der Partitionen
bei Gentoo Linux. Wir erzeugen mindestens drei Partitionen: eine Swap
Partition, eine Root Partition (hier liegt der Hauptteil von Gentoo Linux)
und eine spezielle Boot Partition. Die Boot Partition ist dazu bestimmt den
GRUB Bootmanager und den oder die Linux Kernel aufzunehmen. Die Boot Partition
ist ein sicherer Platz um alle zum booten relevanten Dateien abzulegen.
Bei der t&#xE4;glichen Nutzung sollte die Boot Partition <e>nicht gemountet</e>
bleiben. Dies verhindert das der Kernel von GRUB nach einem System Absturz
nicht mehr geladen werden kann (z.B. wegen einem besch&#xE4;digten Dateisystem).
Au&#xDF;erdem verhindert dies das "Henne-Ei-Problem" bei dem GRUB den Kernel
wegen einem kaputten Dateisystem nicht mehr laden kann, Sie das Dateisystem aber
reparieren k&#xF6;nnten, w&#xE4;re es nur m&#xF6;glich zu booten.</p>

<p>Weiter geht es mit den verschiedenen Dateisystemen. Momentan stehen Ihnen
vier Dateisystem zur Verf&#xFC;gung: XFS, ext2, ext3 (Journaling) und ReiserFS.
Ext2 ist ein erprobtes Linux Dateisystem, unterst&#xFC;tzt aber kein Journaling.
Das Dateisystem ext3 ist eine Weiterentwicklung von ext2 und unterst&#xFC;tzt
Metadaten Journaling sowie "ordered data writes" <!-- Wie soll man das Uebersetzten ??? -->
und ein effektives Daten Journaling. ReiserFS ist ein B*-tree basiertes 
Dateisystem das eine sehr gute Performance bei der Handhabung kleiner Dateien
verspricht und deutlich performanter (10x-15x) als ext2 und ext3 ist, wenn kleine 
Dateien (kleiner 4k) im Spiel sind. Wie auch immer, momentan empfehlen wir die
Verwendung von ReiserFS, wegen wiederholtem Auftreten von Dateisystemfehlern in 
der 2.4.x Serie des Kernels, <e>nicht</e>. ReiserFS unterst&#xFC;tzt Metadaten 
Journaling aber kein Daten Journaling. <!-- Was auch immer das heisst :-) -->
XFS ist ein "high-performance, enterprise-class" Dateisystem mit Metadaten
Journaling und wird voll von Gentoo Linux unterst&#xFC;tzt.</p>

<p>
Wenn Sie ein Standard Dateisystem suchen, nehmen Sie ext2. Wenn Sie ein robustes Journaling 
Dateisystem brauchen, nehmen Sie ext3. Wenn Sie ein "high performance" Dateisystem, das auch 
Journaling unterst&#xFC;tzt, brauchen, nehmen Sie XFS. Beide, ext3 und XFS sind bereits ausgreift. 
Alle Dateisysteme bis auf ReiserFS sind f&#xFC;r der Produktionsbetrieb geeignet.
Wir empfehlen folgende Dateisystemgr&#xF6;&#xDF;en und -arten:</p>

  <table>
  <tr>
  	<th>Partition</th>
	<th>Gr&#xF6;&#xDF;e</th>
	<th>Typ</th>
  	<th>Beispiel Device</th>
  </tr>
  <tr>
  	<ti>Boot Partition, enth&#xE4;lt den/die Kernel und alle zum booten relevanten Information</ti>
	<ti>100 Megabyte</ti>
	<ti>ext2/3 empfohlen (einfach); wenn Sie ReiserFS verwenden, mounten Sie es mit der <c>-o notail</c> Option</ti>
  	<ti>/dev/hda1</ti>
  </tr>
   <tr>
  	<ti>Swap Partition (es gibt kein 128 Megabyte Limit mehr)</ti>
	<ti>&gt;=2*RAM wird empfohlen , ist aber seit Kernel 2.4.10 nicht mehr n&#xF6;tig</ti>
	<ti>Linux swap</ti>
  	<ti>/dev/hda2</ti>
  </tr>
  <tr>
  	<ti>Root Partition, enth&#xE4;lt das Hauptdateisystem (/usr, /home, usw.)</ti>
	<ti>&gt;=1.5 Gigabyte</ti>
	<ti>XFS, ext3 empfohlen; ext2 ok</ti>
  	<ti>/dev/hda3</ti>
  </tr>
 </table>

<note>Sie sollten nun Ihre Partition mit <c>fdisk</c> erzeugen. Denken Sie daran, dass
der Partitionstyp f&#xFC;r Swap "82" und f&#xFC;r regul&#xE4;re Partitionen "83" ist (egal ob Sie XFS, ext3
oder ext2 verwenden wollen).</note>

<p>Wenn Sie Ihre Dateisysteme mit <c>fdisk</c> erstellt haben, ist es jetzt an der Zeit
diese zu initialisieren. Die Swap Partition richten Sie folgenderma&#xDF;en ein:</p>
<pre>
# <i>mkswap /dev/hda2</i>
</pre>
<p>Mit dem Kommando <c>mke2fs</c> erstellen Sie ext2 Dateisysteme:</p>
<pre>
# <i>mke2fs /dev/hda1</i>
</pre>
<p>Um ein XFS Dateisystem zu erstellen, verwenden Sie <c>mkfs.xfs</c></p>
<pre>
# <i>mkfs.xfs /dev/hda3</i>
</pre>
<note>
Es kann sein, dass Sie <c>mkfs.xfs</c> mit einigen Optionen verwenden wollen 
wie z.B.: <c>-d agcount=3 -l size=32m</c>. Die Option <c>-d agcount=3</c> verringert die Anzahl an
"allocation groups". XFS wird auf jeden Fall eine "allocation group" pro
4GB auf der Partition einrichten, d.h. auf einer 20GB Partition ist der minimale Wert f&#xFC;r
<e>agcount</e> 5. Der Parameter <c>-l size=32m</c> erh&#xF6;ht die Gr&#xF6;&#xDF;e des Journals auf 32MB, was
die Performance erh&#xF6;ht.</note>

<warn>Wenn Sie ein XFS Dateisystem auf eine bestehende ReiserFS Partition installieren, k&#xF6;nnen sp&#xE4;tere 
Versuche die Partition zu mounten fehlschlagen wenn Sie das Dateisystem nicht explizit angeben :
<c>mount -t xfs</c>. Um dies zu Umgehen sollten Sie die alte ReiserFS Partition mit Nullen 
&#xFC;berschreiben bevor Sie das XFS Dateisystem erstellen: 
<c>dd if=/dev/zero of=/dev/hd<comment>x</comment> bs=1k</c>.</warn>

<p>Wenn Sie ext3 verwenden wollen, erstellen Sie das Datesystem mit folgendem Befehl: <c>mke2fs -j</c>:</p>
<pre>
# <i>mke2fs -j /dev/hda3</i>
</pre>
<p>Um ein ReiserFS Datesystem zu erstellen, verwenden Sie das <c>mkreiserfs</c> Kommando:</p>
<pre>
# <i>mkreiserfs /dev/hda3</i>
</pre>

<warn>
Noch einmal, momentan raten wir von ReiserFS ab. Obwohl ReiserFS bei vielen Benutzern fehlerfrei
arbeitet, gibt es ein allgemeines Problem mit Dateisystemkorruption bei ReiserFS in Verbindung
mit Kernels der Serie 2.4.x.</warn>

<note>Mehr Informationen zum Thema ext3 unter Linux 2.4 finden Sie hier: <uri>http://www.zip.com.au/~akpm/linux/ext3/ext3-usage.html</uri>.</note>
</body>
</section>
</chapter>
<chapter>
<title>Partitionen mounten</title>
<section>
<body>
<p>
Aktivieren Sie nun Ihre Swap Partition, denn es k&#xF6;nnte sein, dass Sie den virtuellen Speicher
sp&#xE4;ter noch ben&#xF6;tigen:</p>
<pre>
# <i>swapon /dev/hda2</i>
</pre>
<p>Als n&#xE4;chstes erstellen Sie die Verzeichnisse <path>/mnt/gentoo</path> und <path>/mnt/gentoo/boot</path>
und mounten Ihre Partitionen:</p>
<pre>
# <i>mkdir /mnt/gentoo</i>
# <i>mount /dev/hda3 /mnt/gentoo</i>
# <i>mkdir /mnt/gentoo/boot</i>
# <i>mount /dev/hda1 /mnt/gentoo/boot</i>
</pre>
<p>Wenn Sie Gentoo Linux mit separaten <path>/usr</path> oder <path>/var</path> Partitionen 
installieren, m&#xFC;ssen diese dann an die entsprechenden Verzeichnisse gemountet werden 
(<path>/mnt/gentoo/usr</path> und <path>/mnt/gentoo/var</path>).</p>
   
<impo>Wenn Ihre <e>boot</e> Partition (dort wo der Kernel unterbracht ist) eine ReiserFS 
Partition ist, achten Sie darauf das diese mit der <c>-o notail</c> Option gemountet wird.
Sonst wird GRUB nicht richtig installiert. Stellen Sie auch sicher, dass die Option 
<c>notail</c> auch mit in die <path>/etc/fstab</path> mit eingetragen wird. 
Dazu kommen wir gleich.</impo>
</body>
</section>
</chapter>

<chapter>
<title>Die CD-ROM mounten</title>
<section>
<body>
<p>Auch wenn Sie von der CD-ROM gebootet haben, ist diese in der minimalen Linux Umgebung nicht
gemountet. Sie m&#xFC;ssen die CD-ROM erst mounten damit Sie auf die komprimierten Installationsarchive
zugreifen zu k&#xF6;nnen. Um die CD-ROM zu mounten, tippt man gew&#xF6;hnlich:</p>
<pre>
# <i>mount /dev/cdroms/cdrom0 /mnt/cdrom -o ro -t iso9660</i>
</pre>
<p>Wenn die CD-ROM gemountet ist, sollten Sie mit dem Befehl: <c>ls /mnt/cdrom</c> in der Lage
sein die <c>stage???.tbz2</c> Dateien zu sehen.</p>
</body>
</section>
</chapter>

<chapter>
    <title>Entpacken des gew&#xFC;nschten <e>stage*.tbz2</e> Archivs</title>
<section>
<body>

<p>Nun wird es Zeit das ausgew&#xE4;hlte komprimierte Archiv nach <path>/mnt/gentoo</path> zu entpacken.
Danach wechseln Sie mit <c>chroot</c> hin&#xFC;ber in die neue Gentoo Linux Installation,</p>

<impo>Achten Sie darauf, dass Sie das Archiv mit der Option <c>p</c>  entpacken.
Wenn Sie dies vergessen, werden die Rechte einiger Dateien nicht stimmen.</impo>

<impo>Wenn Sie die "bau alles von Grund auf neu" Installation gew&#xE4;hlt haben, 
werden Sie das <path>stage1-ix86-1.2.tbz2</path> Archiv verwenden wollen.
Wenn Sie eine der gr&#xF6;&#xDF;eren CDs verwenden, haben Sie die Wahl zwischen dem
"stage2" und dem "stage3" Archiv. Diese Archive sparen Ihnen eventuell Zeit, das aber
auf Kosten der Flexibilit&#xE4;t (wir haben die Compiler Optimierung und USE Variablen
f&#xFC;r Sie ausgew&#xE4;hlt). Das "stage3" Archiv enth&#xE4;lt zus&#xE4;tzlich noch 
die Quellen des Linux Kernels und eine Kopie des "Portage tree" um ein
 <c>emerge rsync</c> zu einem sp&#xE4;teren Zeitpunkt zu vermeiden.</impo>

<pre>
# <i>cd /mnt/gentoo</i>
# <i>tar -xvjpf /mnt/cdrom/stage?-*.tbz2</i>
# <i>mount -o bind /proc /mnt/gentoo/proc</i>
# <i>cp /etc/resolv.conf /mnt/gentoo/etc/resolv.conf</i>
</pre>

<pre>
# <i>chroot /mnt/gentoo /bin/bash</i>
# <i>env-update</i>
Regenerating /etc/ld.so.cache...
# <i>source /etc/profile</i>
# 
</pre>

<p>Nachdem Sie diese Kommandos ausgef&#xFC;hrt haben, befinden Sie sich "innerhalb" der neuen
Gentoo Linux Umgebung.</p>

</body>
</section>
</chapter>

<chapter>
<title>Rsync</title>
<section>
<body>
<p>
Als n&#xE4;chstes ist es n&#xF6;tig <c>emerge rsync</c> aufzurufen. Wenn Sie ein Gentoo Linux 1.1+ stage3
Archiv verwenden ist <c>emerge rsync</c> jetzt optional, da dort eine Kopie des 
Portage Verzeichnisses beigelegt ist. Mit dem Kommando <c>emerge rsync</c> veranlassen Sie <c>emerge</c> sich mit 
rsync.gentoo.org zu verbinden und die aktuellste Version des Portage Verzeichnisses herunterzuladen:
</p>

<pre>
# <i>emerge rsync</i>
</pre>

<p>Das Portage Datenverzeichnis das heruntergeladen wird ist ca. 10MB gro&#xDF;.</p>

<impo>Die aktuelle Adresse des "rsync" Servers ist momentan: rsync://rsync.gentoo.org/gentoo-portage. 
Wenn Sie Schwierigkeiten haben den Server zu erreichen, stellen Sie sicher, dass Sie 
auch diesen Server verwenden in dem Sie die SYNC Variable in Ihrer /etc/make.conf entsprechend
setzen.</impo>

<note>Sie k&#xF6;nnen <c>rsync</c> so konfigurieren, das es einen HTTP Proxy verwendet,
Dies ist n&#xFC;tzlich wenn Sie sich hinter einer Firewall befinden. Um dies zu 
konfigurieren tragen Sie <i>RSYNC_PROXY="hostname:port"</i> Variable in die
/etc/make.conf ein oder setzten dies als Umgebungsvariable.
</note>

</body>
</section>
</chapter>
<chapter>
<title>Von "stage1" zu "stage2"</title><!-- Hmmm -->
<section>
<body>

<impo>Wenn Sie ein "stage2" oder "stage3" Archiv verwenden, dann haben wir 
den <c>bootstrap</c> Prozess bereits f&#xFC;r Sie durchgef&#xFC;hrt. Es ist nicht 
n&#xF6;tig dies noch einmal zu tun, au&#xDF;er Sie hatten sich entschieden  ein 
<c>emerge rsync</c> durchzuf&#xFC;hren um sicherzustellen ein aktuelles 
Gentoo Linux System zu haben. Die meisten Anwender die sich f&#xFC;r ein
"stage2" oder "stage3" Archiv entschieden haben, werden <i>nicht</i> noch
einmal den <c>bootstrap</c> Prozess durchlaufen wollen, da er selbst auf
sehr schnellen Rechnern bis zu einer Stunde dauern kann.</impo>


<p>Da Sie nun eine funktionierende Kopie des Portage Verzeichnisses haben,
m&#xFC;ssen Sie nun den Gentoo Linux "bootstrap" Prozess durchlaufen. Dazu gehen
Sie folgenderma&#xDF;en vor: Zuerst editieren Sie die Datei <path>/etc/make.conf</path>.
In dieser Datei k&#xF6;nnen Sie die USE Variable an Ihre Gegebenheiten abpassen.
&#xDC;ber die USE Variable k&#xF6;nnen Sie steuern welche optionale Funktionalit&#xE4;t Sie
in die Pakete eingebaut haben m&#xF6;chten. Normalerweise ist die vorgegebene Einstellung,
eine <e>leere</e> oder ungesetzte USE Variable, ausreichend. Wichtig ist, das Sie 
die passenden Werte f&#xFC;r die <c>CHOST</c>, <c>CFLAGS</c> und <c>CXXFLAGS</c> f&#xFC;r
Ihr System eintragen. (Kommentierte Beispiele sind weiter unten in der Datei
vorhanden).Falls Sie sich hinter einer Firewall befinden sollte dort auch ein Proxy 
eingetragen werden.</p>

<pre>
# <i>nano -w /etc/make.conf</i> <comment>(Passen Sie die Eintr&#xE4;ge an)</comment>
</pre>
<note>
Anwender die Ihr System wesentlich optimieren m&#xFC;ssen oder wollen, sollten einen
Blick in die Datei <path>/etc/make.globals</path> werfen. Diese Datei umfasst alle
Gentoo Linux Vorgaben und sollte nicht ver&#xE4;ndert werden. Wem die Vorgaben nicht
gen&#xFC;gen soll die &#xC4;nderungen in die Datei <path>/etc/make.conf</path> eintragen,
da Eintr&#xE4;ge in der <path>make.conf</path> die vorgegebenen Werte der 
<path>make.globals</path> &#xFC;berschreiben. Wenn Sie die USE Einstellungen tunen 
wollen, schauen Sie sich die Datei <path>/etc/make.profile/make.defaults</path> 
genauer an. Wenn Sie beispielsweise eine der vorhanden Einstellungen deaktivieren
wollen, setzen Sie den entsprechenden <c>USE="-foo"</c> Eintrag in der /etc/make.conf.
(Dies w&#xFC;rde das USE Flag <c>foo</c> abschalten) </note>

<p>Jetzt k&#xF6;nnen Sie den "bootstrap" Prozess starten. Das dauert 1-2 Stunden; abh&#xE4;ngig davon
wie flott Ihr Rechner ist. Auf einem 900Mhz AMD Athlon System dauert der Prozess ca. 1 Stunde.
W&#xE4;hrend Zeit wird der Rechner darauf vorbereitet den Rest des Systems zu kompilieren.
Die GNU Compiler Suite sowie die GNU C Bibliothek werden gebaut. Dies sind zeitaufwendige 
Vorg&#xE4;nge, die den Hauptteil des "bootstrap" Prozesses ausmachen: </p>

<pre>
# <i>cd /usr/portage</i>
# <i>scripts/bootstrap.sh</i>
</pre>
<p>Der "bootstrap" Prozess startet.</p>
<note>
Normalerweise verwendet Portage <c>/var/tmp</c> w&#xE4;hrend des kompilierens der Pakete.
Dabei kann es sein, dass mehrere hundert Megabyte des tempor&#xE4;ren Speichers verwendet 
werden. Wenn Sie den Ort wo Portage die tempor&#xE4;ren Dateien ablegt &#xE4;ndern m&#xF6;chten, k&#xF6;nnen
Sie dies <e>vor</e> dem Starten des "bootstrap" Prozesses durch setzten der 
PORTAGE_TMPDIR Variable tun:</note>
<pre>
# <i>export PORTAGE_TMPDIR="/otherdir/tmp"</i>
</pre>

<p>
Das Skript <c>bootstrap.sh</c> baut nun <c>binutils</c>, <c>gcc</c>, <c>gettext</c> und
<c>glibc</c>.Danach werden <c>binutils</c>, <c>gcc</c> sowie <c>gettext</c> mit der neuen
<c>glibc</c> erneut gebaut. Es muss nicht gesagt werden, dass dieser Prozess seine Zeit braucht.
Machen Sie ein kleines Nickerchen. Wenn der Prozess dann durchgelaufen ist, haben Sie den Stand 
des "stage2" Archivs erreicht.</p>
</body>
</section>
</chapter>
<chapter>
<title>Von "stage2" zu "stage3"</title>
<section>
<body>

<p>Nachdem der "bootstrap" Prozess abgeschlossen ist und  Sie nun bei "stage2" 
(noch einmal, wenn Sie das "stage3" Archiv verwenden sind alle diese Schritte 
nicht n&#xF6;tig) angelangt sind, ist es an der Zeit den Rest des Basissystems zu
bauen und installieren: </p>

<pre>
# <i>export CONFIG_PROTECT=""</i>
# <i>emerge --pretend system</i>
	<comment>[listet alle zu installierenden Pakete auf]</comment>
# <i>emerge system</i>
</pre>

<note>Das Kommando <c>export CONFIG_PROTECT=""</c> stellt sicher, dass alle
neuen Scripte die nach <path>/etc</path> installiert werden die alten 
Scripte (aus dem Paket <path>sys-apps/baselayout</path>) auch &#xFC;berschreiben 
k&#xF6;nnen. Dazu wird Portages neuer Mechanismus zum Schutz von Konfigurationsdateien
umgangen. Genaueres erfahren Sie wenn Sie <c>emerge --help config</c> aufrufen.</note>
 
<p>Es dauert seine Zeit das ganze Basissystem zu bauen. Ihr Lohn ist, das es
g&#xE4;nzlich auf Ihren Rechner optimiert ist. Leider m&#xFC;ssen Sie einen Weg finden
sich bis zu diesem Zeitpunkt zu besch&#xE4;ftigen. Der Autor empfiehlt "Star
Wars - Super Bombad Racing" f&#xFC;r die PS2. Wenn <c>emerge system</c> fertig ist,
sind Sie auf dem Stand des "stage3" Archivs.</p>

</body>
</section>
</chapter>

<chapter>
<title>Letzte Schritte: Zeitzone</title>
<section>
<body>

<p>Sie sollten nun ein "stage3" System haben, das zur abschlie&#xDF;enden Konfiguration bereit ist.
Sie beginnen mit dem Einstellen der Zeitzone. Durch setzen der Zeitzone bevor der Kernel
gebaut wird, stellen Sie sicher, das Sie eine sinnvolle <c>uname -a</c> Ausgabe bekommen.</p>

<p>Sie finden die Zeitzonendateien (oder GMT wenn Sie Greenwich Mean Time einstellen wollen)
in <path>/usr/share/zoneinfo</path>. Erstellen Sie nun einen symbolischen Link:</p>

<pre>
# <i>ln -sf /usr/share/zoneinfo/pfad/zur/zeitzonendatei /etc/localtime</i>
</pre>
</body>
</section>
</chapter>
<chapter>

<title>Letze Schritte: Kernel und System Logger</title>
<section>
<body>
<p>
Wenn Sie mit dem "stage3" Archiv installieren erleichtern wir Ihnen die Arbeit durch 
bereitstellen der aktuellen Linux Quellen in <path>/usr/src/linux</path>.
Ansonsten m&#xFC;ssen Sie die Linux Quellen von mit <c>emerge</c> nachinstallieren.
Zur Zeit bieten wir folgende Pakete (ebuilds) an:</p>
<table>
<tr><th>ebuild</th><th>Beschreibung</th></tr>
<tr><ti><path>gentoo-sources</path></ti><ti>Ein von uns Leistungs- und Funktionalit&#xE4;tserweiterter Kernel, basierenden auf den -ac Quellen (ohne XFS Unterst&#xFC;tzung)</ti></tr>
<tr><ti><path>xfs-sources</path></ti><ti>Ein Auszug aus der SGI XFS CVS Linux Quellen. Verwenden Sie diesen Kernel wenn Sie XFS verwenden wollen</ti></tr>
<tr><ti><path>openmosix-sources</path></ti><ti>Ein Linux Kernel mit Unterst&#xFC;tzung der GPL <uri link="http://www.openmosix.com">openMosix</uri> Load-Balancing/Clustering Technologie</ti></tr>
<tr><ti><path>usermode-sources</path></ti><ti>Ein Linux Kernel der Unterst&#xFC;tzung f&#xFC;r User-Mode Linux.  ("Linux inside Linux" Technologie)</ti></tr>
<tr><ti><path>vanilla-sources</path></ti><ti>Die unver&#xE4;nderten Linux Kernel Quellen von kernel.org</ti></tr>
</table>

<p>W&#xE4;hlen Sie einen aus und installieren Sie ihn wie folgt:</p>

<pre>
# <i>emerge sys-kernel/gentoo-sources</i>
</pre>

<p>Sobald Sie die Linux Quellen installiert haben, k&#xF6;nnen Sie Ihren eigenen Kernel kompilieren:</p>

<pre>
# <i>cd /usr/src/linux</i>
# <i>make menuconfig</i>
# <i>make dep &amp;&amp; make clean bzImage modules modules_install</i>
# <i>mv /boot/bzImage /boot/bzImage.orig</i> <comment>[falls bzImage bereits existiert]</comment>
# <i>cp /usr/src/linux/arch/i386/boot/bzImage /boot</i>
</pre>
<warn>
Damit Ihr Kernel fehlerfrei funktioniert m&#xFC;ssen Sie sicherstellen, das einige wichtige
Optionen <i>aktiviert sind und nicht als Modul kompiliert</i> werden. Sie m&#xFC;ssen die
Option <i>"Code maturity level options --> Prompt for development and/or incomplete code/drivers"</i>
aktivieren damit alle n&#xF6;tigen Optionen verf&#xFC;gbar sind.
Im Men&#xFC; "File systems" aktivieren Sie den Punkt <i>"Device File System"</i> (beachten Sie, dass
Sie die "/dev/pts file system support" Option <e>nicht</e> aktivieren m&#xFC;ssen). Sie m&#xFC;ssen
au&#xDF;erdem noch den Punkt <i>"Virtual Memory Filesystem"</i> aktivieren. Entsprechend der 
Dateisysteme die Sie verwenden wollen, aktivieren die Unterst&#xFC;tzung f&#xFC;r ReiserFS 
("Reiserfs support"), Ext3 ("Ext3 journalling file system support") oder 
XFS ("SGI XFS filesystem support"). Es ist immer eine gute Idee auch die Unterst&#xFC;tzung 
Ext2 ("Second extended fs support") einzubinden auch wenn Sie es nicht verwenden.
Wenn Sie IDE Festplatten verwenden, sollten Sie zus&#xE4;tzlich die Option "USE DMA by default" aktivieren,
da die Festplatten sonst sehr langsam sind. Nat&#xFC;rlich muss dazu die Unterst&#xFC;tzung f&#xFC;r IDE Festplatten 
("IDE disk support") einkompiliert werden, da der Kernel diese Platten sonst nicht sieht.</warn>
<note>
Wenn Sie einen Kernel der 2.2er Serie vorziehen, ist es nun m&#xF6;glich einen solchen 
zu installieren. Die Stabilit&#xE4;t die ein solcher Kernel bietet hat aber ihren Preis:
Sie verlieren viele der neuen F&#xE4;higkeiten die ein 2.4er Kernel bietet (z.B.: XFS und
tmpfs Dateisysteme, iptables, uvm.); aber es gibt Patches damit ReiserFS und devfs
auch von einem 2.2er Kernel unterst&#xFC;tzt werden.
Die Gentoo Linux Boot Scripte ben&#xF6;tigen entweder "tmpfs" oder "ramdisk" Support im
Kernel, d.h. Anwender des 2.2er Kernels m&#xFC;ssen sicherstellen das der Kernel 
mit "ramdisk support" kompiliert wird (nicht als Modul). Es ist <e>entscheidend</e>
das bei einem 2.2er Kernel in der <path>/boot/grub/menu.lst</path> die Option
<e>gentoo=notmpfs</e> angegeben wird, damit von den Boot Scripten anstelle des 
"tmpfs" eine Ramdisk gemountet wird. Wenn Sie auch auf devfs verzichten wollen
trage Sie dort stattdessen <e>gentoo=notmpfs,nodevfs</e> ein.
</note>

<p>Ihr eigener Kernel (und die Modules) sind jetzt installiert. Als n&#xE4;chstes sollten
Sie das Logsystem installieren. Wir bieten <c>sysklogd</c>, das &#xFC;bliche Set von 
"logging daemons". Au&#xDF;erdem stehen noch <c>syslog-ng</c> und <c>metalog</c> zur
Verf&#xFC;gung.Power User scheinen sich von sysklogd (schlechte Performance) abzuwenden und
sich f&#xFC;r syslog-ng oder metalog zu entscheiden. Wenn Sie sich nicht sicher sind, 
versuchen Sie metalog, da es ziemlich popul&#xE4;r zu sein scheint.
Um einen der Logger zu installieren, tippen Sie <e>eine</e> der folgenden drei Zeilen: 
</p>

<pre>
# <i>emerge sys-apps/sysklogd</i>
# <i>rc-update add sysklogd default</i>
<comment>oder</comment>
# <i>emerge app-admin/syslog-ng</i>
# <i>rc-update add syslog-ng default</i>
<comment>oder</comment>
# <i>emerge app-admin/metalog</i>
# <i>rc-update add metalog default</i>
</pre>
<warn>
Wenn Sie syslog-ng installieren m&#xFC;ssen Sie auch <path>/etc/syslog-ng/syslog-ng.conf</path> erstellen.
Eine Beispielkonfiguration finden Sie in <path>/etc/syslog-ng</path> </warn>

<impo>
Metalog schreibt seine Daten blockweise auf die Festplatte was bewirkt, das Nachrichten
nicht sofort in den Logdateien auftauchen. Wenn sie versuchen einen Daemon zu debuggen,
ist dieses Verhalten weniger hilfreich. Wenn Sie Ihr Gentoo Linux System in Gang gebracht 
haben, k&#xF6;nnen Sie Metalog mit dem USR1 Signal veranlassen das Puffern der Nachrichten 
tempor&#xE4;r zu deaktivieren (was bedeutet, das <i>tail -f <path>/var/log/irgendwas</path></i>
wie erwartet in Echtzeit arbeitet). Mit dem USR2 Signal schalten Sie den Datenpuffer 
wieder ein.</impo>

<p>
Sie k&#xF6;nnen jetzt ein beliebiges "cron" Paket zur Installation ausw&#xE4;hlen. Momentan bieten wir
"dcron", "fcron", "vcron" an. Wenn Sie nicht wissen welches Sie nehmen sollen, nehmen Sie 
"vcron". Installiert wird folgenderma&#xDF;en:</p>
<pre>
# <i>emerge sys-apps/dcron</i>
# <i>crontab /etc/crontab</i>
<comment>oder</comment>
# <i>emerge sys-apps/fcron</i>
# <i>crontab /etc/crontab</i>
<comment>oder</comment>
# <i>emerge sys-apps/vcron</i>
</pre>
<p>N&#xE4;here Informationen dar&#xFC;ber wie "cron" bei Gentoo Linux arbeitet finden Sie
<uri link="http://lists.gentoo.org/pipermail/gentoo-announce/2002-April/000151.html">hier</uri>.</p>
</body>
</section>
</chapter>
<chapter>
<title>Final steps: install additional packages</title>
<section>
<body>
<p>
You may need to install some additional packages in the Portage tree
if you are using any optional features like XFS or LVM.  If you're
using XFS, you should emerge the <c>xfsprogs</c> ebuild:
</p>
<pre>
# <i>emerge sys-apps/xfsprogs</i>
</pre>
<p>
If you're using LVM, you should emerge the <c>lvm-user</c> ebuild:
</p>
<pre>
# <i>emerge --usepkg sys-apps/lvm-user</i>
</pre>
<p>
If you're a laptop user and wish to use your pcmcia slots on your first
real reboot, you'll want to make sure you install the pcmcia-cs package.
</p>
<pre>
# <i>emerge sys-apps/pcmcia-cs</i>
</pre>
</body>
</section>
</chapter>
<chapter>
<title>Final steps: /etc/fstab</title>
<section>
<body>
<p>Your Gentoo Linux system is almost ready for use.  All we need to do now is configure
a few important system files and install the GRUB boot loader. 
The first file we need to
configure is <path>/etc/fstab</path>.  Remember that you should use
the <c>notail</c> option for your boot partition if you chose to create a ReiserFS filesystem on it.
Remember to specify <c>ext2</c>, <c>ext3</c> or <c>reiserfs</c> filesystem types as appropriate.</p>
<p>Use something like the <path>/etc/fstab</path> listed below, but of course be sure to replace "BOOT",
"ROOT" and "SWAP" with the actual block devices you are using (such as <c>hda1</c>, etc.)</p>
<pre>
<comment>
# /etc/fstab: static file system information.
#
# noatime turns of atimes for increased performance (atimes normally aren't
# needed; notail increases performance of ReiserFS (at the expense of storage
# efficiency).  It's safe to drop the noatime options if you want and to 
# switch between notail and tail freely.

# &lt;fs&gt;           &lt;mountpoint&gt;   &lt;type&gt;   &lt;opts&gt;          &lt;dump/pass&gt;

# NOTE: If your BOOT partition is ReiserFS, add the notail option to opts.
</comment>
/dev/BOOT           /boot       ext2	 noauto,noatime	 1 2
/dev/ROOT           /           ext3	 noatime         0 1
/dev/SWAP           none        swap	 sw              0 0
/dev/cdroms/cdrom0  /mnt/cdrom  iso9660	 noauto,ro       0 0
proc                /proc       proc	 defaults        0 0
</pre>

</body>
</section>
<section>
<title>Final steps: set the root password</title>
<body>
<p>Before you forget, set the root password by typing:</p>
<pre>
# <i>passwd</i>
</pre>
</body>
</section>
<section>
<title>Final steps: /etc/hostname</title>
<body>
<p>Edit this file so that it contains your fully-qualified domain name on a single line, i.e. <c>mymachine.mydomain.com</c>.
</p>
</body>
</section>

<section>
<title>Final steps: /etc/hosts</title>
<body>
<p>This file contains a list of ip addresses and their associated hostnames.  It's used by the system to resolve the IP addresses
of any hostnames that may not be in your nameservers.  Here's a template for this file:
</p><pre>
127.0.0.1      localhost
<comment># the next line contains your IP for your local LAN, and your associated machine name</comment>
192.168.1.1    mymachine.mydomain.com	mymachine
</pre>
</body>
</section>

<section>
<title>Final network configuration</title>
<body>
<p>
Add the names of any modules that are necessary for the proper functioning of your system to 
<path>/etc/modules.autoload</path> file (you can also add any options you
need to the same line.) When Gentoo Linux boots, these modules will be automatically
loaded.  Of particular importance is your ethernet card module, if you happened to compile
it as a module:
</p>
<pre caption="/etc/modules.autoload">
3c59x
</pre>
<p>Edit the <path>/etc/conf.d/net</path> script to get your network configured for your
first boot:
</p>
<pre>
# <i>nano -w /etc/conf.d/net</i>
# <i>rc-update add net.eth0 default</i>
</pre>
<p>
If you have multiple network cards you need to create additional <path>net.eth<comment>x</comment></path>
scripts for each one (<comment>x</comment> = 1, 2, ...):
</p>
<pre caption="Multiple network interfaces">
# <i>cd /etc/init.d</i>
# <i>cp net.eth0 net.eth<comment>x</comment></i>
# <i>rc-update add net.eth<comment>x</comment> default</i>
</pre>
<p>
If you have a PCMCIA card installed, have a quick look into 
/etc/init.d/pcmcia to verify that things seem all right for your setup,
then add 
<pre>
depend() {
	need pcmcia
}
</pre>
on top of your <path>/etc/init.d/net.eth<comment>x</comment></path> file, 
for the pcmcia drivers to be autoloaded whenever your network is loaded.
</p>
</body>
</section>

<section>
<title>Final steps: configure basic settings (including the international keymap setting)</title>
<body>
<pre caption="basic configuration">
# <i>nano -w /etc/rc.conf</i>
</pre>
<p>
Follow the directions in the file to configure the basic settings.  
All users will want to make sure that <c>CLOCK</c> is set to his/her
liking.  International keyboard users will want to set the <c>KEYMAP</c>
variable (browse <path>/usr/share/keymaps</path> to see the various
possibilities).
</p>
</body>
</section>

<section>
<title>Final steps: configure GRUB</title>
<body>
<p>
The most critical part of understanding GRUB is getting comfortable with how GRUB refers to hard drives and partitions.
Your Linux partition <path>/dev/hda1</path> is called <path>(hd0,0)</path> under GRUB.  Notice the parenthesis around the hd0,0 - they are required.  
Hard drives count from zero rather than "a", and partitions start at zero rather than one.  So, <path>/dev/hdb3</path> gets translated to <path>(hd1,2)</path>, and <path>/dev/hdd7</path> gets translated to <path>(hd3,6)</path>.  After you've gotten the feel for that, convert your boot and root partition names to the GRUB format and write them down.  Now, it's time to install GRUB.
</p>

<p>The easiest way to install grub is to simply type <c>grub</c> at your chrooted shell prompt:
</p><pre>
# <i>grub</i>
</pre><p>You'll be presented with the <c>grub&gt;</c> grub command-line prompt.  Now, you need to type in the
right commands to install the GRUB boot record onto your hard drive.  In my example configuration,
I want to install the GRUB boot record on my hard drive's MBR (master boot record), so that 
the first thing I see when I turn on the computer is the GRUB prompt.  In my case, the commands
I want to type are:</p>
<pre>grub&gt; <i>root (hd0,0)</i>
grub&gt; <i>setup (hd0)</i>
grub&gt; <i>quit</i>
</pre>

<p>Here's how the two commands work.  The first <c>root ( )</c> command tells GRUB
the location of your boot partition (in our example, <path>/dev/hda1</path> or 
<path>(hd0,0)</path> in GRUB terminology.  Then, the second <c>setup ( )</c> command tells GRUB where to install the
boot record - it will be configure to look for its special files at the <c>root
( )</c> location that you specified.  In my case, I want the boot record on the
MBR of the hard drive, so I simply specify <path>/dev/hda</path> (also known as <path>(hd0)</path>).  If I were using
another boot loader and wanted to set up GRUB as a secondary boot-loader, I
could install GRUB to the boot record of a particular partition.  In that case,
I'd specify a particular partition rather than the entire disk.  Once the GRUB
boot record has been 
successfully installed, you can type <c>quit</c> to quit GRUB.  Gentoo Linux is
installed, but we need to create the <path>/boot/grub/menu.lst</path> file so that
we get a nice GRUB boot menu when the system reboots.  Here's how to do it.</p>

<p>Now, create the menu.lst file (<c>nano -w /boot/grub/menu.lst</c>), and add the following to it:</p>
<pre>
default 0
timeout 30
splashimage=(hd0,0)/boot/grub/splash.xpm.gz

title=My example Gentoo Linux
root (hd0,0) 
kernel /boot/bzImage root=/dev/hda3 

<comment># Below needed only for people who dual-boot</comment>
title=Windows NT Workstation
root (hd0,5) 
chainloader +1
</pre>
<note>
The <path>menu.lst</path> file should end in "lst" as in "list", not "1st" as in "first".  Also, (hd0,0) should be 
written without any spaces inside the parentheses.
</note>
<p>After saving this file, Gentoo Linux installation is complete.  Selecting the first option will
tell GRUB to boot Gentoo Linux without a fuss.  The second part of the menu.lst file is optional, and shows you how to
use GRUB to boot a bootable Windows partition.</p>

<note>Above, <path>(hd0,0)</path> should point to your "boot" partition
(<path>/dev/hda1</path> in our example config) and <path>/dev/hda3</path> should point to
your root filesystem.  <path>(hd0,5)</path> contains the NT boot
loader.</note> <p>Also, if you need to pass any options to the kernel, simply
add them to the end of the <c>kernel</c> command.  We're already passing one option
(<c>root=/dev/hda3</c>), but you can pass others as well.  In particular, you can
turn off devfs by default (not recommended unless you know what you're doing) by
adding the <c>gentoo=nodevfs</c> option to the <c>kernel</c> command.

<note>Unlike in earlier versions of Gentoo Linux, you no longer have to add 
<c>devfs=mount</c> to the end of the <c>kernel</c> line to enable devfs.  In rc6
devfs is enabled by default.
</note>
</p>

</body>
</section>
</chapter>
<chapter>
<title>Installation complete!</title>
<section>
<body>
<p>Now, Gentoo Linux is installed.  The only remaining step is to exit the chrooted shell, safely unmount your partitions
and reboot the system:</p>
<pre>
# <i>exit</i> 
<codenote>This exits the chrooted shell; you can also type <c>^D</c></codenote>
# <i>cd / </i>
# <i>umount /mnt/gentoo/boot</i>
# <i>umount /mnt/gentoo/proc</i>
# <i>umount /mnt/gentoo</i>
# <i>reboot</i>
</pre>
<note>
After rebooting, it is a good idea to run the <c>update-modules</c> command to create
the <path>/etc/modules.conf</path> file.  Instead of modifying this file directly, you should
generally make changes to the files in <path>/etc/modules.d</path>.
</note>
<p>If you have any questions or would like to get involved with Gentoo Linux development, 
consider joining our gentoo-user and gentoo-dev mailing lists
(there's a "click to subscribe" link on our <uri link="http://www.gentoo.org">main page</uri>).
We also have a handy <uri link="/doc/desktop.html">Desktop configuration guide</uri> that will
help you to continue configuring your new Gentoo Linux system, and a useful <uri link="/doc/portage-user.html">Portage user guide</uri>
to help familiarize you with Portage basics.  Enjoy and welcome to Gentoo Linux!</p>
</body>
</section>
</chapter>
</guide>
